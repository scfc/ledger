# NOTE: Please validate this file after editing it using
#       Travis WebLint https://lint.travis-ci.org/
#       or travis-lint https://github.com/travis-ci/travis-lint

language: cpp
compiler:
  - gcc
os:
  - linux
  - osx
services:
  - docker
sudo: false
cache:
  apt: true

env:
  global:
      # List of required boost libraries to build
    - BOOST_LIBS="date_time,filesystem,iostreams,python,regex,system,test"
      # Encrypted COVERITY_SCAN_TOKEN
    - secure: "mYNxD1B8WNSvUeKzInehZ7syi2g1jH2ymeSQxoeKKD2duq3pvNWPdZdc4o9MlWQcAqcz58rhFZRIpuEWCnP0LbbJaG+MyuemMn9uAmg9Y4gFpMsBPHuTdf8pO3rDex+tkrr9puEJFgL+QV/TehxO6NDDpx7UdYvJb+4aZD/auYI="
  matrix:
    # Boost version to build against; an empty string means the
    # distribution's default.
    - BOOST_VERSION=""
    - BOOST_VERSION="1.61.0"
    - DOCKERIMAGE= PACKAGES=''
    - DOCKERIMAGE=fedora:28 PACKAGES='boost-devel boost-python-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'
    - DOCKERIMAGE=fedora:29 PACKAGES='boost-devel boost-python2-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'
    - DOCKERIMAGE=fedora:rawhide PACKAGES='boost-devel boost-python2-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'

matrix:
  exclude:
    # The configuration for macOS only works with Boost installed by
    # homebrew, so exclude the other combinations.
    - os: linux
      env: BOOST_VERSION=""
    - os: osx
      env: BOOST_VERSION="1.61.0"
    # Run tests via docker only on Linux.
    - os: osx
      env: DOCKERIMAGE= PACKAGES=''
    - os: osx
      env: DOCKERIMAGE=fedora:28 PACKAGES='boost-devel boost-python-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'
    - os: osx
      env: DOCKERIMAGE=fedora:29 PACKAGES='boost-devel boost-python2-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'
    - os: osx
      env: DOCKERIMAGE=fedora:rawhide PACKAGES='boost-devel boost-python2-devel cmake gcc gcc-c++ gettext-devel gmp-devel libedit-devel make mpfr-devel python2-devel utf8cpp-devel'

addons:
  coverity_scan:
    project:
      name: "ledger/ledger"
      description: "Build submitted via Travis CI"
    build_command_prepend: "cmake . -DUSE_PYTHON=ON -DBUILD_DEBUG=ON -DCLANG_GCOV=ON"
    build_command: "make"
    branch_pattern: coverity
  apt:
    packages:
      - libgmp-dev
      - libmpfr-dev
      - libedit-dev
      - libboost-dev
      - libboost-test-dev
      - libboost-regex-dev
      - libboost-python-dev
      - libboost-system-dev
      - libboost-date-time-dev
      - libboost-iostreams-dev
      - libboost-filesystem-dev
      - libboost-serialization-dev
  homebrew:
    packages:
      - boost
      - boost-python
      - gmp
      - mpfr

before_install:
  - |
    if [ -n "${BOOST_VERSION}" ]; then
        BOOST_SOURCE="$(mktemp -d)"
        BOOST_SOURCE_URL="https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//./_}.tar.bz2/download"
        curl -Ls "$BOOST_SOURCE_URL" |
        tar jx -C "${BOOST_SOURCE}" --strip-components 1
    fi

install:
  - |
    if [ -n "${BOOST_VERSION}" ]; then
        export BOOST_ROOT="${HOME}/boost"
        pushd "${BOOST_SOURCE}"
        ./bootstrap.sh --with-libraries="${BOOST_LIBS}"
        ./b2 threading=multi -d0 --prefix="${BOOST_ROOT}" install
        popd
        rm -Rf "${BOOST_SOURCE}"
    fi

before_script:
  # On macOS, CMake finds the Boost.Python installed by homebrew only
  # with the component name "python27".  Also, precompiling system.hh
  # does not work.
  - if [ -z "${DOCKERIMAGE}" ]; then if [ "$TRAVIS_OS_NAME" = osx -a -z "$BOOST_VERSION" ]; then EXTRA_CMAKE_ARGS="-DPRECOMPILE_SYSTEM_HH=OFF -DUSE_PYTHON27_COMPONENT=ON"; fi; fi
  - if [ -z "${DOCKERIMAGE}" ]; then cmake . -DUSE_PYTHON=ON -DBUILD_DEBUG=ON $EXTRA_CMAKE_ARGS; fi
  - if [ -z "${DOCKERIMAGE}" ]; then make VERBOSE=1; fi

script:
  - if [ -z "${DOCKERIMAGE}" ]; then ctest --output-on-failure; fi
  - if [ -z "${DOCKERIMAGE}" ]; then PYTHONPATH=. python python/demo.py; fi
  # TODO: The values for *FLAGS and the invocation of cmake come from
  # cmake-rpm-macros's /usr/lib/rpm/macros.d/macros.cmake, the values
  # for PACKAGES from Fedora's ledger.spec.  To avoid bitrot, it would
  # make sense to (for starters) expand *FLAGS dynamically and/or
  # clone https://src.fedoraproject.org/rpms/ledger.git, check out the
  # relevant branch and then run fedpkg local.
  - if [ -n "${DOCKERIMAGE}" ]; then docker run -v `pwd`:/src/ledger:rw "${DOCKERIMAGE}" /bin/bash -c "cd /src/ledger && dnf install -y $PACKAGES && export CFLAGS='-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection' CXXFLAGS='-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection' FFLAGS='-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -I/usr/lib64/gfortran/modules}' FCFLAGS='-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -I/usr/lib64/gfortran/modules' LDFLAGS='-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld' && /usr/bin/cmake -DCMAKE_C_FLAGS_RELEASE:STRING='-DNDEBUG' -DCMAKE_CXX_FLAGS_RELEASE:STRING='-DNDEBUG' -DCMAKE_Fortran_FLAGS_RELEASE:STRING='-DNDEBUG' -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON . -DUSE_PYTHON:BOOL=ON -DUSE_DOXYGEN:BOOL=OFF -DBUILD_WEB_DOCS:BOOL=OFF -DBUILD_DEBUG=ON && make && CTEST_OUTPUT_ON_FAILURE=1 make check"; fi

notifications:
  email:
    on_success: change
    on_failure: change
  irc:
    channels: [ "chat.freenode.net#ledger" ]
    on_success: change
    on_failure: change
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/0050d91909a8cde39e35
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

